# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#


version: '2'

volumes:
  couchdb0.org1.example.com:
  couchdb1.org1.example.com:
  couchdb0.org2.example.com:
  couchdb1.org2.example.com:
  couchdb0.org3.example.com:
  couchdb1.org3.example.com:
  couchdb0.org4.example.com:
  couchdb1.org4.example.com:
  couchdb0.org5.example.com:
  couchdb1.org5.example.com:
  couchdb0.org6.example.com:
  couchdb1.org6.example.com:
  peer0.org1.example.com:
  peer1.org1.example.com:
  peer0.org2.example.com:
  peer1.org2.example.com:
  peer0.org3.example.com:
  peer1.org3.example.com:
  peer0.org4.example.com:
  peer1.org4.example.com:
  peer0.org5.example.com:
  peer1.org5.example.com:
  peer0.org6.example.com:
  peer1.org6.example.com:
  orderer1.org0.example.com:
  orderer2.org0.example.com:
  orderer3.org0.example.com:

networks:
  byfn:
    external:
      name: ${COMPOSE_PROJECT_NAME}

services:


  couchdb0.org1.example.com:
    container_name: couchdb0.org1.example.com
    image: hyperledger/fabric-couchdb:0.4.18
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=

    volumes:
      - ./data/couchdbs/couchdb0.org1.example.com:/opt/couchdb/data
      - couchdb0.org1.example.com:/var/hyperledger/production/couchdb
    ports:
      - "5984:5984"
    networks:
      - byfn


  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      # 日志级别
      - FABRIC_LOGGING_SPEC=debug
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # 网络模式
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_ID=peer0.org1.example.com
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.org1.example.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052

      ## peer1的CORE_PEER_GOSSIP_BOOTSTRAP = 同组织下的peer2的CORE_PEER_ADDRESS
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org1.example.com:8051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      # 通信是否使用tls加密
      - CORE_PEER_TLS_ENABLED=true
      # tls签名证书路径
      - CORE_PEER_TLS_CERT_FILE=/usr/local/home/org1/peer0.org1.example.com/tls-msp/signcerts/cert.pem
      # tls私钥证书路径
      - CORE_PEER_TLS_KEY_FILE=/usr/local/home/org1/peer0.org1.example.com/tls-msp/keystore/key.pem
      # tls服务端的根证书路径
      - CORE_PEER_TLS_ROOTCERT_FILE=/usr/local/home/org1/peer0.org1.example.com/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem
      # msp证书路径
      - CORE_PEER_MSPCONFIGPATH=/usr/local/home/org1/peer0.org1.example.com/msp
      # 声明CouchDB配置
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0.org1.example.com:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/org1/peer0.org1.example.com
    volumes:
      - /var/run:/host/var/run
      - ./crypto-config:/usr/local/home
      - peer0.org1.example.com:/var/hyperledger/production
    networks:
      - byfn
    ports:
      - 7051:7051
    depends_on:
      - couchdb0.org1.example.com


#
#  couchdb1.org1.example.com:
#    container_name: couchdb1.org1.example.com
#    image: hyperledger/fabric-couchdb:0.4.18
#    environment:
#      - COUCHDB_USER=
#      - COUCHDB_PASSWORD=
#    volumes:
#      - ./data/couchdbs/couchdb1.org1.example.com:/opt/couchdb/data
#      - couchdb1.org1.example.com:/var/hyperledger/production/couchdb
#    ports:
#      - "6984:5984"
#    networks:
#      - byfn
#
#
#  peer1.org1.example.com:
#    container_name: peer1.org1.example.com
#    image: hyperledger/fabric-peer:$IMAGE_TAG
#    environment:
#      # 日志级别
#      - FABRIC_LOGGING_SPEC=debug
#      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
#      # 网络模式
#      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}
#      - CORE_PEER_LOCALMSPID=Org1MSP
#      - CORE_PEER_ID=peer1.org1.example.com
#      - CORE_PEER_ADDRESS=peer1.org1.example.com:8051
#      - CORE_PEER_LISTENADDRESS=0.0.0.0:8051
#      - CORE_PEER_CHAINCODEADDRESS=peer1.org1.example.com:8052
#      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:8052
#
#      ## peer2的CORE_PEER_GOSSIP_BOOTSTRAP = 同组织下的peer1的CORE_PEER_ADDRESS
#      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.example.com:7051
#      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org1.example.com:8051
#      - CORE_PEER_GOSSIP_USELEADERELECTION=true
#      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
#      - CORE_PEER_GOSSIP_ORGLEADER=false
#      - CORE_PEER_PROFILE_ENABLED=true
#      # 通信是否使用tls加密
#      - CORE_PEER_TLS_ENABLED=true
#      # tls签名证书路径
#      - CORE_PEER_TLS_CERT_FILE=/usr/local/home/org1/peer1.org1.example.com/tls-msp/signcerts/cert.pem
#      # tls私钥证书路径
#      - CORE_PEER_TLS_KEY_FILE=/usr/local/home/org1/peer1.org1.example.com/tls-msp/keystore/key.pem
#      # tls服务端的根证书路径
#      - CORE_PEER_TLS_ROOTCERT_FILE=/usr/local/home/org1/peer1.org1.example.com/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem
#      # msp证书路径
#      - CORE_PEER_MSPCONFIGPATH=/usr/local/home/org1/peer1.org1.example.com/msp
#      # 声明CouchDB配置
#      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1.org1.example.com:5984
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
#    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/org1/peer1.org1.example.com
#    volumes:
#      - /var/run:/host/var/run
#      - ./crypto-config:/usr/local/home
#      - peer1.org1.example.com:/var/hyperledger/production
#    networks:
#      - byfn
#    ports:
#      - 8051:8051
#    depends_on:
#      - couchdb1.org1.example.com


  couchdb0.org2.example.com:
    container_name: couchdb0.org2.example.com
    image: hyperledger/fabric-couchdb:0.4.18
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    volumes:
      - ./data/couchdbs/couchdb0.org2.example.com:/opt/couchdb/data
      - couchdb0.org2.example.com:/var/hyperledger/production/couchdb
    ports:
      - "7984:5984"
    networks:
      - byfn


  peer0.org2.example.com:
    container_name: peer0.org2.example.com
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      # 日志级别
      - FABRIC_LOGGING_SPEC=debug
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # 网络模式
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_ID=peer0.org2.example.com
      - CORE_PEER_ADDRESS=peer0.org2.example.com:9051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:9051
      - CORE_PEER_CHAINCODEADDRESS=peer0.org2.example.com:9052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:9052

      ## peer1的CORE_PEER_GOSSIP_BOOTSTRAP = 同组织下的peer2的CORE_PEER_ADDRESS
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.example.com:10051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:9051
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      # 通信是否使用tls加密
      - CORE_PEER_TLS_ENABLED=true
      # tls签名证书路径
      - CORE_PEER_TLS_CERT_FILE=/usr/local/home/org2/peer0.org2.example.com/tls-msp/signcerts/cert.pem
      # tls私钥证书路径
      - CORE_PEER_TLS_KEY_FILE=/usr/local/home/org2/peer0.org2.example.com/tls-msp/keystore/key.pem
      # tls服务端的根证书路径
      - CORE_PEER_TLS_ROOTCERT_FILE=/usr/local/home/org2/peer0.org2.example.com/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem
      # msp证书路径
      - CORE_PEER_MSPCONFIGPATH=/usr/local/home/org2/peer0.org2.example.com/msp

      # 声明CouchDB配置
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0.org2.example.com:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/org2/peer0.org2.example.com
    volumes:
      - /var/run:/host/var/run
      - ./crypto-config:/usr/local/home
      - peer0.org2.example.com:/var/hyperledger/production
    networks:
      - byfn
    ports:
      - 9051:9051
    depends_on:
      - couchdb0.org2.example.com

#
#  couchdb1.org2.example.com:
#    container_name: couchdb1.org2.example.com
#    image: hyperledger/fabric-couchdb:0.4.18
#    environment:
#      - COUCHDB_USER=
#      - COUCHDB_PASSWORD=
#    volumes:
#      - ./data/couchdbs/couchdb1.org2.example.com:/opt/couchdb/data
#      - couchdb1.org2.example.com:/var/hyperledger/production/couchdb
#    ports:
#      - "8984:5984"
#    networks:
#      - byfn
#
#
#  peer1.org2.example.com:
#    container_name: peer1.org2.example.com
#    image: hyperledger/fabric-peer:$IMAGE_TAG
#    environment:
#      # 日志级别
#      - FABRIC_LOGGING_SPEC=debug
#      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
#      # 网络模式
#      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}
#      - CORE_PEER_LOCALMSPID=Org2MSP
#      - CORE_PEER_ID=peer1.org2.example.com
#      - CORE_PEER_ADDRESS=peer1.org2.example.com:10051
#      - CORE_PEER_LISTENADDRESS=0.0.0.0:10051
#      - CORE_PEER_CHAINCODEADDRESS=peer1.org2.example.com:10052
#      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:10052
#
#      ## peer2的CORE_PEER_GOSSIP_BOOTSTRAP = 同组织下的peer1的CORE_PEER_ADDRESS
#      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org2.example.com:9051
#      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org2.example.com:10051
#      - CORE_PEER_GOSSIP_USELEADERELECTION=true
#      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
#      - CORE_PEER_GOSSIP_ORGLEADER=false
#      - CORE_PEER_PROFILE_ENABLED=true
#      # 通信是否使用tls加密
#      - CORE_PEER_TLS_ENABLED=true
#      # tls签名证书路径
#      - CORE_PEER_TLS_CERT_FILE=/usr/local/home/org2/peer1.org2.example.com/tls-msp/signcerts/cert.pem
#      # tls私钥证书路径
#      - CORE_PEER_TLS_KEY_FILE=/usr/local/home/org2/peer1.org2.example.com/tls-msp/keystore/key.pem
#      # tls服务端的根证书路径
#      - CORE_PEER_TLS_ROOTCERT_FILE=/usr/local/home/org2/peer1.org2.example.com/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem
#      # msp证书路径
#      - CORE_PEER_MSPCONFIGPATH=/usr/local/home/org2/peer1.org2.example.com/msp
#
#      # 声明CouchDB配置
#      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1.org2.example.com:5984
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
#    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/org2/peer1.org2.example.com
#    volumes:
#      - /var/run:/host/var/run
#      - ./crypto-config:/usr/local/home
#      - peer1.org2.example.com:/var/hyperledger/production
#    networks:
#      - byfn
#    ports:
#      - 10051:10051
#    depends_on:
#      - couchdb1.org2.example.com


  couchdb0.org3.example.com:
    container_name: couchdb0.org3.example.com
    image: hyperledger/fabric-couchdb:0.4.18
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    volumes:
      - ./data/couchdbs/couchdb0.org3.example.com:/opt/couchdb/data
      - couchdb0.org3.example.com:/var/hyperledger/production/couchdb
    ports:
      - "9984:5984"
    networks:
      - byfn


  peer0.org3.example.com:
    container_name: peer0.org3.example.com
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      # 日志级别
      - FABRIC_LOGGING_SPEC=debug
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # 网络模式
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}
      - CORE_PEER_LOCALMSPID=Org3MSP
      - CORE_PEER_ID=peer0.org3.example.com
      - CORE_PEER_ADDRESS=peer0.org3.example.com:11051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:11051
      - CORE_PEER_CHAINCODEADDRESS=peer0.org3.example.com:11052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:11052

      ## peer1的CORE_PEER_GOSSIP_BOOTSTRAP = 同组织下的peer2的CORE_PEER_ADDRESS
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org3.example.com:12051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org3.example.com:11051
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      # 通信是否使用tls加密
      - CORE_PEER_TLS_ENABLED=true
      # tls签名证书路径
      - CORE_PEER_TLS_CERT_FILE=/usr/local/home/org3/peer0.org3.example.com/tls-msp/signcerts/cert.pem
      # tls私钥证书路径
      - CORE_PEER_TLS_KEY_FILE=/usr/local/home/org3/peer0.org3.example.com/tls-msp/keystore/key.pem
      # tls服务端的根证书路径
      - CORE_PEER_TLS_ROOTCERT_FILE=/usr/local/home/org3/peer0.org3.example.com/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem
      # msp证书路径
      - CORE_PEER_MSPCONFIGPATH=/usr/local/home/org3/peer0.org3.example.com/msp

      # 声明CouchDB配置
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0.org3.example.com:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/org3/peer0.org3.example.com
    volumes:
      - /var/run:/host/var/run
      - ./crypto-config:/usr/local/home
      - peer0.org3.example.com:/var/hyperledger/production
    networks:
      - byfn
    ports:
      - 11051:11051
    depends_on:
      - couchdb0.org3.example.com

#
#  couchdb1.org3.example.com:
#    container_name: couchdb1.org3.example.com
#    image: hyperledger/fabric-couchdb:0.4.18
#    environment:
#      - COUCHDB_USER=
#      - COUCHDB_PASSWORD=
#    volumes:
#      - ./data/couchdbs/couchdb1.org3.example.com:/opt/couchdb/data
#      - couchdb1.org3.example.com:/var/hyperledger/production/couchdb
#    ports:
#      - "10984:5984"
#    networks:
#      - byfn
#
#
#  peer1.org3.example.com:
#    container_name: peer1.org3.example.com
#    image: hyperledger/fabric-peer:$IMAGE_TAG
#    environment:
#      # 日志级别
#      - FABRIC_LOGGING_SPEC=debug
#      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
#      # 网络模式
#      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}
#      - CORE_PEER_LOCALMSPID=Org3MSP
#      - CORE_PEER_ID=peer1.org3.example.com
#      - CORE_PEER_ADDRESS=peer1.org3.example.com:12051
#      - CORE_PEER_LISTENADDRESS=0.0.0.0:12051
#      - CORE_PEER_CHAINCODEADDRESS=peer1.org3.example.com:12052
#      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:12052
#
#      ## peer2的CORE_PEER_GOSSIP_BOOTSTRAP = 同组织下的peer1的CORE_PEER_ADDRESS
#      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org3.example.com:11051
#      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org3.example.com:12051
#      - CORE_PEER_GOSSIP_USELEADERELECTION=true
#      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
#      - CORE_PEER_GOSSIP_ORGLEADER=false
#      - CORE_PEER_PROFILE_ENABLED=true
#      # 通信是否使用tls加密
#      - CORE_PEER_TLS_ENABLED=true
#      # tls签名证书路径
#      - CORE_PEER_TLS_CERT_FILE=/usr/local/home/org3/peer1.org3.example.com/tls-msp/signcerts/cert.pem
#      # tls私钥证书路径
#      - CORE_PEER_TLS_KEY_FILE=/usr/local/home/org3/peer1.org3.example.com/tls-msp/keystore/key.pem
#      # tls服务端的根证书路径
#      - CORE_PEER_TLS_ROOTCERT_FILE=/usr/local/home/org3/peer1.org3.example.com/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem
#      # msp证书路径
#      - CORE_PEER_MSPCONFIGPATH=/usr/local/home/org3/peer1.org3.example.com/msp
#
#      # 声明CouchDB配置
#      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1.org3.example.com:5984
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
#    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/org3/peer1.org3.example.com
#    volumes:
#      - /var/run:/host/var/run
#      - ./crypto-config:/usr/local/home
#      - peer1.org3.example.com:/var/hyperledger/production
#    networks:
#      - byfn
#    ports:
#      - 12051:12051
#    depends_on:
#      - couchdb1.org2.example.com



  couchdb0.org4.example.com:
    container_name: couchdb0.org4.example.com
    image: hyperledger/fabric-couchdb:0.4.18
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    volumes:
      - ./data/couchdbs/couchdb0.org4.example.com:/opt/couchdb/data
      - couchdb0.org4.example.com:/var/hyperledger/production/couchdb
    ports:
      - "11984:5984"
    networks:
      - byfn


  peer0.org4.example.com:
    container_name: peer0.org4.example.com
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      # 日志级别
      - FABRIC_LOGGING_SPEC=debug
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # 网络模式
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}
      - CORE_PEER_LOCALMSPID=Org4MSP
      - CORE_PEER_ID=peer0.org4.example.com
      - CORE_PEER_ADDRESS=peer0.org4.example.com:13051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:13051
      - CORE_PEER_CHAINCODEADDRESS=peer0.org4.example.com:13052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:13052

      ## peer1的CORE_PEER_GOSSIP_BOOTSTRAP = 同组织下的peer2的CORE_PEER_ADDRESS
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org4.example.com:14051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org4.example.com:13051
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      # 通信是否使用tls加密
      - CORE_PEER_TLS_ENABLED=true
      # tls签名证书路径
      - CORE_PEER_TLS_CERT_FILE=/usr/local/home/org4/peer0.org4.example.com/tls-msp/signcerts/cert.pem
      # tls私钥证书路径
      - CORE_PEER_TLS_KEY_FILE=/usr/local/home/org4/peer0.org4.example.com/tls-msp/keystore/key.pem
      # tls服务端的根证书路径
      - CORE_PEER_TLS_ROOTCERT_FILE=/usr/local/home/org4/peer0.org4.example.com/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem
      # msp证书路径
      - CORE_PEER_MSPCONFIGPATH=/usr/local/home/org4/peer0.org4.example.com/msp

      # 声明CouchDB配置
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0.org4.example.com:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/org4/peer0.org4.example.com
    volumes:
      - /var/run:/host/var/run
      - ./crypto-config:/usr/local/home
      - peer0.org4.example.com:/var/hyperledger/production
    networks:
      - byfn
    ports:
      - 13051:13051
    depends_on:
      - couchdb0.org4.example.com

#
#  couchdb1.org4.example.com:
#    container_name: couchdb1.org4.example.com
#    image: hyperledger/fabric-couchdb:0.4.18
#    environment:
#      - COUCHDB_USER=
#      - COUCHDB_PASSWORD=
#    volumes:
#      - ./data/couchdbs/couchdb1.org4.example.com:/opt/couchdb/data
#      - couchdb1.org4.example.com:/var/hyperledger/production/couchdb
#    ports:
#      - "12984:5984"
#    networks:
#      - byfn
#
#
#  peer1.org4.example.com:
#    container_name: peer1.org4.example.com
#    image: hyperledger/fabric-peer:$IMAGE_TAG
#    environment:
#      # 日志级别
#      - FABRIC_LOGGING_SPEC=debug
#      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
#      # 网络模式
#      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}
#      - CORE_PEER_LOCALMSPID=Org4MSP
#      - CORE_PEER_ID=peer1.org4.example.com
#      - CORE_PEER_ADDRESS=peer1.org4.example.com:14051
#      - CORE_PEER_LISTENADDRESS=0.0.0.0:14051
#      - CORE_PEER_CHAINCODEADDRESS=peer1.org4.example.com:14052
#      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:14052
#
#      ## peer2的CORE_PEER_GOSSIP_BOOTSTRAP = 同组织下的peer1的CORE_PEER_ADDRESS
#      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org4.example.com:13051
#      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org4.example.com:14051
#      - CORE_PEER_GOSSIP_USELEADERELECTION=true
#      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
#      - CORE_PEER_GOSSIP_ORGLEADER=false
#      - CORE_PEER_PROFILE_ENABLED=true
#      # 通信是否使用tls加密
#      - CORE_PEER_TLS_ENABLED=true
#      # tls签名证书路径
#      - CORE_PEER_TLS_CERT_FILE=/usr/local/home/org4/peer1.org4.example.com/tls-msp/signcerts/cert.pem
#      # tls私钥证书路径
#      - CORE_PEER_TLS_KEY_FILE=/usr/local/home/org4/peer1.org4.example.com/tls-msp/keystore/key.pem
#      # tls服务端的根证书路径
#      - CORE_PEER_TLS_ROOTCERT_FILE=/usr/local/home/org4/peer1.org4.example.com/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem
#      # msp证书路径
#      - CORE_PEER_MSPCONFIGPATH=/usr/local/home/org4/peer1.org4.example.com/msp
#
#      # 声明CouchDB配置
#      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1.org4.example.com:5984
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
#    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/org4/peer1.org4.example.com
#    volumes:
#      - /var/run:/host/var/run
#      - ./crypto-config:/usr/local/home
#      - peer1.org4.example.com:/var/hyperledger/production
#    networks:
#      - byfn
#    ports:
#      - 14051:14051
#    depends_on:
#      - couchdb1.org4.example.com



  couchdb0.org5.example.com:
    container_name: couchdb0.org5.example.com
    image: hyperledger/fabric-couchdb:0.4.18
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    volumes:
      - ./data/couchdbs/couchdb0.org5.example.com:/opt/couchdb/data
      - couchdb0.org5.example.com:/var/hyperledger/production/couchdb
    ports:
      - "13984:5984"
    networks:
      - byfn


  peer0.org5.example.com:
    container_name: peer0.org5.example.com
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      # 日志级别
      - FABRIC_LOGGING_SPEC=debug
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # 网络模式
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}
      - CORE_PEER_LOCALMSPID=Org5MSP
      - CORE_PEER_ID=peer0.org5.example.com
      - CORE_PEER_ADDRESS=peer0.org5.example.com:15051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:15051
      - CORE_PEER_CHAINCODEADDRESS=peer0.org5.example.com:15052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:15052

      ## peer1的CORE_PEER_GOSSIP_BOOTSTRAP = 同组织下的peer2的CORE_PEER_ADDRESS
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org5.example.com:16051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org5.example.com:15051
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      # 通信是否使用tls加密
      - CORE_PEER_TLS_ENABLED=true
      # tls签名证书路径
      - CORE_PEER_TLS_CERT_FILE=/usr/local/home/org5/peer0.org5.example.com/tls-msp/signcerts/cert.pem
      # tls私钥证书路径
      - CORE_PEER_TLS_KEY_FILE=/usr/local/home/org5/peer0.org5.example.com/tls-msp/keystore/key.pem
      # tls服务端的根证书路径
      - CORE_PEER_TLS_ROOTCERT_FILE=/usr/local/home/org5/peer0.org5.example.com/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem
      # msp证书路径
      - CORE_PEER_MSPCONFIGPATH=/usr/local/home/org5/peer0.org5.example.com/msp

      # 声明CouchDB配置
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0.org5.example.com:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/org5/peer0.org5.example.com
    volumes:
      - /var/run:/host/var/run
      - ./crypto-config:/usr/local/home
      - peer0.org5.example.com:/var/hyperledger/production
    networks:
      - byfn
    ports:
      - 15051:15051
    depends_on:
      - couchdb0.org5.example.com

#
#  couchdb1.org5.example.com:
#    container_name: couchdb1.org5.example.com
#    image: hyperledger/fabric-couchdb:0.4.18
#    environment:
#      - COUCHDB_USER=
#      - COUCHDB_PASSWORD=
#    volumes:
#      - ./data/couchdbs/couchdb1.org5.example.com:/opt/couchdb/data
#      - couchdb1.org5.example.com:/var/hyperledger/production/couchdb
#    ports:
#      - "14984:5984"
#    networks:
#      - byfn
#
#
#  peer1.org5.example.com:
#    container_name: peer1.org5.example.com
#    image: hyperledger/fabric-peer:$IMAGE_TAG
#    environment:
#      # 日志级别
#      - FABRIC_LOGGING_SPEC=debug
#      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
#      # 网络模式
#      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}
#      - CORE_PEER_LOCALMSPID=Org5MSP
#      - CORE_PEER_ID=peer1.org5.example.com
#      - CORE_PEER_ADDRESS=peer1.org5.example.com:16051
#      - CORE_PEER_LISTENADDRESS=0.0.0.0:16051
#      - CORE_PEER_CHAINCODEADDRESS=peer1.org5.example.com:16052
#      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:16052
#
#      ## peer2的CORE_PEER_GOSSIP_BOOTSTRAP = 同组织下的peer1的CORE_PEER_ADDRESS
#      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org5.example.com:15051
#      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org5.example.com:16051
#      - CORE_PEER_GOSSIP_USELEADERELECTION=true
#      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
#      - CORE_PEER_GOSSIP_ORGLEADER=false
#      - CORE_PEER_PROFILE_ENABLED=true
#      # 通信是否使用tls加密
#      - CORE_PEER_TLS_ENABLED=true
#      # tls签名证书路径
#      - CORE_PEER_TLS_CERT_FILE=/usr/local/home/org5/peer1.org5.example.com/tls-msp/signcerts/cert.pem
#      # tls私钥证书路径
#      - CORE_PEER_TLS_KEY_FILE=/usr/local/home/org5/peer1.org5.example.com/tls-msp/keystore/key.pem
#      # tls服务端的根证书路径
#      - CORE_PEER_TLS_ROOTCERT_FILE=/usr/local/home/org5/peer1.org5.example.com/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem
#      # msp证书路径
#      - CORE_PEER_MSPCONFIGPATH=/usr/local/home/org5/peer1.org5.example.com/msp
#
#      # 声明CouchDB配置
#      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1.org5.example.com:5984
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
#    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/org5/peer1.org5.example.com
#    volumes:
#      - /var/run:/host/var/run
#      - ./crypto-config:/usr/local/home
#      - peer1.org5.example.com:/var/hyperledger/production
#    networks:
#      - byfn
#    ports:
#      - 16051:16051
#    depends_on:
#      - couchdb1.org5.example.com



  couchdb0.org6.example.com:
    container_name: couchdb0.org6.example.com
    image: hyperledger/fabric-couchdb:0.4.18
    environment:
      - COUCHDB_USER=
      - COUCHDB_PASSWORD=
    volumes:
      - ./data/couchdbs/couchdb0.org6.example.com:/opt/couchdb/data
      - couchdb0.org6.example.com:/var/hyperledger/production/couchdb
    ports:
      - "15984:5984"
    networks:
      - byfn


  peer0.org6.example.com:
    container_name: peer0.org6.example.com
    image: hyperledger/fabric-peer:$IMAGE_TAG
    environment:
      # 日志级别
      - FABRIC_LOGGING_SPEC=debug
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # 网络模式
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}
      - CORE_PEER_LOCALMSPID=Org6MSP
      - CORE_PEER_ID=peer0.org6.example.com
      - CORE_PEER_ADDRESS=peer0.org6.example.com:17051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:17051
      - CORE_PEER_CHAINCODEADDRESS=peer0.org6.example.com:17052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:17052

      ## peer1的CORE_PEER_GOSSIP_BOOTSTRAP = 同组织下的peer2的CORE_PEER_ADDRESS
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org6.example.com:18051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org6.example.com:17051
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_PROFILE_ENABLED=true
      # 通信是否使用tls加密
      - CORE_PEER_TLS_ENABLED=true
      # tls签名证书路径
      - CORE_PEER_TLS_CERT_FILE=/usr/local/home/org6/peer0.org6.example.com/tls-msp/signcerts/cert.pem
      # tls私钥证书路径
      - CORE_PEER_TLS_KEY_FILE=/usr/local/home/org6/peer0.org6.example.com/tls-msp/keystore/key.pem
      # tls服务端的根证书路径
      - CORE_PEER_TLS_ROOTCERT_FILE=/usr/local/home/org6/peer0.org6.example.com/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem
      # msp证书路径
      - CORE_PEER_MSPCONFIGPATH=/usr/local/home/org6/peer0.org6.example.com/msp

      # 声明CouchDB配置
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb0.org6.example.com:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/org3/peer0.org6.example.com
    volumes:
      - /var/run:/host/var/run
      - ./crypto-config:/usr/local/home
      - peer0.org6.example.com:/var/hyperledger/production
    networks:
      - byfn
    ports:
      - 17051:17051
    depends_on:
      - couchdb0.org6.example.com

#
#  couchdb1.org6.example.com:
#    container_name: couchdb1.org6.example.com
#    image: hyperledger/fabric-couchdb:0.4.18
#    environment:
#      - COUCHDB_USER=
#      - COUCHDB_PASSWORD=
#    volumes:
#      - ./data/couchdbs/couchdb1.org6.example.com:/opt/couchdb/data
#      - couchdb1.org6.example.com:/var/hyperledger/production/couchdb
#    ports:
#      - "16984:5984"
#    networks:
#      - byfn
#
#
#  peer1.org6.example.com:
#    container_name: peer1.org6.example.com
#    image: hyperledger/fabric-peer:$IMAGE_TAG
#    environment:
#      # 日志级别
#      - FABRIC_LOGGING_SPEC=debug
#      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
#      # 网络模式
#      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}
#      - CORE_PEER_LOCALMSPID=Org6MSP
#      - CORE_PEER_ID=peer1.org6.example.com
#      - CORE_PEER_ADDRESS=peer1.org6.example.com:18051
#      - CORE_PEER_LISTENADDRESS=0.0.0.0:18051
#      - CORE_PEER_CHAINCODEADDRESS=peer1.org6.example.com:18052
#      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:18052
#
#      ## peer2的CORE_PEER_GOSSIP_BOOTSTRAP = 同组织下的peer1的CORE_PEER_ADDRESS
#      - CORE_PEER_GOSSIP_BOOTSTRAP=peer1.org6.example.com:17051
#      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer1.org6.example.com:18051
#      - CORE_PEER_GOSSIP_USELEADERELECTION=true
#      - CORE_PEER_GOSSIP_SKIPHANDSHAKE=true
#      - CORE_PEER_GOSSIP_ORGLEADER=false
#      - CORE_PEER_PROFILE_ENABLED=true
#      # 通信是否使用tls加密
#      - CORE_PEER_TLS_ENABLED=true
#      # tls签名证书路径
#      - CORE_PEER_TLS_CERT_FILE=/usr/local/home/org6/peer1.org6.example.com/tls-msp/signcerts/cert.pem
#      # tls私钥证书路径
#      - CORE_PEER_TLS_KEY_FILE=/usr/local/home/org6/peer1.org6.example.com/tls-msp/keystore/key.pem
#      # tls服务端的根证书路径
#      - CORE_PEER_TLS_ROOTCERT_FILE=/usr/local/home/org6/peer1.org6.example.com/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem
#      # msp证书路径
#      - CORE_PEER_MSPCONFIGPATH=/usr/local/home/org6/peer1.org6.example.com/msp
#
#      # 声明CouchDB配置
#      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb1.org6.example.com:5984
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=
#      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=
#    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/org6/peer1.org6.example.com
#    volumes:
#      - /var/run:/host/var/run
#      - ./crypto-config:/usr/local/home
#      - peer1.org6.example.com:/var/hyperledger/production
#    networks:
#      - byfn
#    ports:
#      - 18051:18051
#    depends_on:
#      - couchdb1.org6.example.com


  orderer1.org0.example.com:
    container_name: orderer1.org0.example.com
    image: hyperledger/fabric-orderer:$IMAGE_TAG
    environment:
      - ORDERER_HOME=/usr/local/home/org0
      - ORDERER_HOST=orderer1.org0.example.com
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      # 创世区块路径
      - ORDERER_GENERAL_GENESISFILE=/usr/local/channel-artifacts/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=Org0MSP
      - ORDERER_GENERAL_LOCALMSPDIR=/usr/local/home/org0/orderer1.org0.example.com/msp

      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/usr/local/home/org0/orderer1.org0.example.com/tls-msp/keystore/key.pem
      - ORDERER_GENERAL_TLS_CERTIFICATE=/usr/local/home/org0/orderer1.org0.example.com/tls-msp/signcerts/cert.pem
      - ORDERER_GENERAL_TLS_ROOTCAS=[/usr/local/home/org0/orderer1.org0.example.com/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem]

      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/usr/local/home/org0/orderer1.org0.example.com/tls-msp/signcerts/cert.pem
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/usr/local/home/org0/orderer1.org0.example.com/tls-msp/keystore/key.pem
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/usr/local/home/org0/orderer1.org0.example.com/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem]

#      - ORDERER_DEBUG_BROADCASTTRACEDIR=/usr/local/data/logs
    volumes:
      - ./crypto-config:/usr/local/home
      - ./channel-artifacts:/usr/local/channel-artifacts
      - ./data/logs/orderer1.org0.example.com:/usr/local/data/logs
      - orderer1.org0.example.com:/var/hyperledger/production/orderer
    ports:
      - 7050:7050
    networks:
      - byfn


  orderer2.org0.example.com:
    container_name: orderer2.org0.example.com
    image: hyperledger/fabric-orderer:$IMAGE_TAG
    environment:
      - ORDERER_HOME=/usr/local/home/org0
      - ORDERER_HOST=orderer2.org0.example.com
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=8050
      - ORDERER_GENERAL_GENESISMETHOD=file
      # 创世区块路径
      - ORDERER_GENERAL_GENESISFILE=/usr/local/channel-artifacts/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=Org0MSP
      - ORDERER_GENERAL_LOCALMSPDIR=/usr/local/home/org0/orderer2.org0.example.com/msp

      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/usr/local/home/org0/orderer2.org0.example.com/tls-msp/keystore/key.pem
      - ORDERER_GENERAL_TLS_CERTIFICATE=/usr/local/home/org0/orderer2.org0.example.com/tls-msp/signcerts/cert.pem
      - ORDERER_GENERAL_TLS_ROOTCAS=[/usr/local/home/org0/orderer2.org0.example.com/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem]

      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/usr/local/home/org0/orderer2.org0.example.com/tls-msp/signcerts/cert.pem
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/usr/local/home/org0/orderer2.org0.example.com/tls-msp/keystore/key.pem
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/usr/local/home/org0/orderer2.org0.example.com/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem]

#      - ORDERER_DEBUG_BROADCASTTRACEDIR=/usr/local/data/logs
    volumes:
      - ./crypto-config:/usr/local/home
      - ./channel-artifacts:/usr/local/channel-artifacts
      - ./data/logs/orderer2.org0.example.com:/usr/local/data/logs
      - orderer2.org0.example.com:/var/hyperledger/production/orderer
    ports:
      - 8050:8050
    networks:
      - byfn


  orderer3.org0.example.com:
    container_name: orderer3.org0.example.com
    image: hyperledger/fabric-orderer:$IMAGE_TAG
    environment:
      - ORDERER_HOME=/usr/local/home/org0
      - ORDERER_HOST=orderer3.org0.example.com
      - ORDERER_GENERAL_LOGLEVEL=debug
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=9050
      - ORDERER_GENERAL_GENESISMETHOD=file
      # 创世区块路径
      - ORDERER_GENERAL_GENESISFILE=/usr/local/channel-artifacts/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=Org0MSP
      - ORDERER_GENERAL_LOCALMSPDIR=/usr/local/home/org0/orderer3.org0.example.com/msp

      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/usr/local/home/org0/orderer3.org0.example.com/tls-msp/keystore/key.pem
      - ORDERER_GENERAL_TLS_CERTIFICATE=/usr/local/home/org0/orderer3.org0.example.com/tls-msp/signcerts/cert.pem
      - ORDERER_GENERAL_TLS_ROOTCAS=[/usr/local/home/org0/orderer3.org0.example.com/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem]

      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/usr/local/home/org0/orderer3.org0.example.com/tls-msp/signcerts/cert.pem
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/usr/local/home/org0/orderer3.org0.example.com/tls-msp/keystore/key.pem
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/usr/local/home/org0/orderer3.org0.example.com/tls-msp/tlscacerts/tls-0-0-0-0-7052.pem]

#      - ORDERER_DEBUG_BROADCASTTRACEDIR=/usr/local/data/logs
    volumes:
      - ./crypto-config:/usr/local/home
      - ./channel-artifacts:/usr/local/channel-artifacts
      - ./data/logs/orderer3.org0.example.com:/usr/local/data/logs
      - orderer3.org0.example.com:/var/hyperledger/production/orderer
    ports:
      - 9050:9050
    networks:
      - byfn
